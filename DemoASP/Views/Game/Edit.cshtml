@using DAL.Interfaces;
@model DAL.Models.Game
@inject IGenreRepository GenreRepo;
@{
   ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Game</h4>
<hr />
<div class="row">
   <div class="col-md-4">
      <form asp-action="Edit">
         <div asp-validation-summary="ModelOnly" class="text-danger"></div>
         <div class="form-group">
            <label asp-for="Title" class="control-label"></label>
            <input asp-for="Title" class="form-control" />
            <span asp-validation-for="Title" class="text-danger"></span>
         </div>
         <div class="form-group">
            <label asp-for="DateDeSortie" class="control-label"></label>
            <input asp-for="DateDeSortie" class="form-control" />
            <span asp-validation-for="DateDeSortie" class="text-danger"></span>
         </div>
         <div class="form-group">
            <label asp-for="Genres" class="control-label"></label>
            <select asp-for="Genres" class="form-select" aria-label="@Model.Genres.Label">
               @foreach (var item in GenreRepo.ReadAll())
               {
                  <option value="@item">@item.Label</option>
               }
            </select>
            <span asp-validation-for="Genres" class="text-danger"></span>
         </div>
         <div class="form-group">
            <label asp-for="Resume" class="control-label"></label>
            <input asp-for="Resume" class="form-control" />
            <span asp-validation-for="Resume" class="text-danger"></span>
         </div>
         <div class="form-group">
            <input type="submit" value="Save" class="btn btn-primary" />
         </div>
      </form>
   </div>
</div>

<div>
   <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
   @{
      await Html.RenderPartialAsync("_ValidationScriptsPartial");
   }
}
